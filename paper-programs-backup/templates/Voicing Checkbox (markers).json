{
  "name": "Voicing Checkbox (markers)",
  "description": "A sample checkbox with sounds and voicing responses. Check by adding any color marker. Uncheck by removing the marker. Add a blank focus program to emulate focus events by whiskering. Make sure to add number of the focus paper program to focusByWhiskerProgramNumber controller component!",
  "keyWords": "voicing, checkbox",
  "projectData": "{\"programs\":[{\"number\":55,\"title\":\"Checkbox Responses\",\"keywords\":\"\",\"description\":\"A sample checkbox with voicing responses. Requires focus program from templates.\",\"expanded\":true,\"topWhiskerLength\":0.2,\"rightWhiskerLength\":0.2,\"bottomWhiskerLength\":0.2,\"leftWhiskerLength\":0.2,\"positionProperty\":{\"x\":235.3132302860855,\"y\":143.4482379446555},\"modelContainer\":{\"namedBooleanProperties\":[{\"name\":\"isChecked\",\"defaultValue\":false,\"propertyType\":\"BooleanProperty\"},{\"name\":\"isFocused\",\"defaultValue\":false,\"propertyType\":\"BooleanProperty\"}],\"namedVector2Properties\":[{\"name\":\"paperPosition\",\"propertyType\":\"Vector2Property\",\"defaultX\":0,\"defaultY\":0}],\"namedNumberProperties\":[],\"namedEnumerationProperties\":[],\"namedDerivedProperties\":[],\"namedBounds2Properties\":[],\"namedObservableArrays\":[],\"namedArrayItems\":[],\"namedArrayItemReferences\":[],\"namedStringProperties\":[{\"name\":\"nameResponse\",\"propertyType\":\"StringProperty\",\"defaultValue\":\"Force Values\"},{\"name\":\"checkedContextResponse\",\"propertyType\":\"StringProperty\",\"defaultValue\":\"Shown in newtons.\"},{\"name\":\"uncheckedContextResponse\",\"propertyType\":\"StringProperty\",\"defaultValue\":\"Hidden.\"},{\"name\":\"hintResponse\",\"propertyType\":\"StringProperty\",\"defaultValue\":\"Explore with or without newtons.\"}]},\"controllerContainer\":{\"vector2PropertyControllers\":[{\"name\":\"paperPositionController\",\"controlledComponentName\":\"paperPosition\",\"controlType\":\"MATCH_CENTER\",\"controlTypeFamily\":\"\"}],\"boundsPropertyControllers\":[],\"booleanPropertyControllers\":[{\"name\":\"isCheckedController\",\"controlledComponentName\":\"isChecked\",\"controlType\":\"MARKER\",\"controlTypeFamily\":\"\",\"whiskerConfiguration\":{\"topLength\":0.2,\"rightLength\":0.2,\"bottomLength\":0.2,\"leftLength\":0.2,\"otherPaperNumber\":null},\"markerColor\":\"\"},{\"name\":\"focusByWhiskerProgramNumber\",\"controlledComponentName\":\"isFocused\",\"controlType\":\"WHISKER\",\"controlTypeFamily\":\"\",\"whiskerConfiguration\":{\"topLength\":0.2,\"rightLength\":0.2,\"bottomLength\":0.2,\"leftLength\":0.2,\"otherPaperNumber\":\"20\"},\"markerColor\":\"\"}],\"numberPropertyControllers\":[],\"enumerationPropertyControllers\":[]},\"viewContainer\":{\"soundViews\":[{\"name\":\"playCheckboxChecked\",\"modelComponentNames\":[\"isChecked\"],\"referenceComponentNames\":[],\"controlFunctionString\":\"if (isChecked) {\\n    play();\\n}\",\"lazyLink\":false,\"soundFileName\":\"/uploads/checkboxChecked.mp3\",\"loop\":false,\"autoplay\":false},{\"name\":\"playCheckboxUnchecked\",\"modelComponentNames\":[\"isChecked\"],\"referenceComponentNames\":[],\"controlFunctionString\":\"if (isChecked === false){\\n    play();\\n}\",\"lazyLink\":false,\"soundFileName\":\"/uploads/checkboxUnchecked.mp3\",\"loop\":false,\"autoplay\":false}],\"speechViews\":[{\"name\":\"voiceFocusResponses\",\"modelComponentNames\":[\"isFocused\",\"nameResponse\",\"hintResponse\"],\"referenceComponentNames\":[\"hintResponse\",\"nameResponse\"],\"controlFunctionString\":\"if(isFocused) {\\n    speak( nameResponse + hintResponse );\\n}\\n// Name response only\\n// if(isFocused) {\\n//     speak( nameResponse );\\n// }\",\"lazyLink\":false},{\"name\":\"voiceCheckingResponses\",\"modelComponentNames\":[\"isChecked\",\"nameResponse\",\"checkedContextResponse\",\"uncheckedContextResponse\"],\"referenceComponentNames\":[\"nameResponse\",\"checkedContextResponse\",\"uncheckedContextResponse\"],\"controlFunctionString\":\"if (isChecked){\\n    speak( nameResponse + checkedContextResponse );\\n} else {\\n    speak( nameResponse + uncheckedContextResponse );\\n}\\n// The default behavior is the latest response interrupts a previous response.\\n// You may need to set the priority of your responses dependent on your design context.\",\"lazyLink\":true}],\"textViews\":[],\"shapeViews\":[],\"backgroundViews\":[],\"imageViews\":[]},\"listenerContainer\":{\"linkListeners\":[],\"animationListeners\":[],\"bluetoothListeners\":[]},\"customCodeContainer\":{\"onProgramAddedCode\":\"\",\"onProgramRemovedCode\":\"\",\"onProgramChangedPositionCode\":\"\",\"onProgramMarkersAddedCode\":\"\",\"onProgramMarkersRemovedCode\":\"\",\"onProgramMarkersChangedPositionCode\":\"\",\"onProgramAdjacentCode\":\"\",\"onProgramSeparatedCode\":\"\"}}]}",
  "id": 69,
  "spaceName": null
}