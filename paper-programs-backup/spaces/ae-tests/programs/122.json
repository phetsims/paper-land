{
  "number": 122,
  "originalCode": "// Physical marker tests - Copy\n// Keywords: view\n\nimportScripts('paper.js');\n\n(async () => {\n\n  //----------------------------------------------------------------------\n  // Board code\n  //----------------------------------------------------------------------\n\n  // Get the paper number of this piece of paper (which should not change).\n  const myPaperNumber = await paper.get('number');\n\n  // Create view components (graphics, Voicing, sound, anything)\n  const onProgramAdded = ( paperProgramNumber, scratchpad, sharedData ) => {\n    someFunctionWithATypo();\n  };\n\n  const onProgramChangedPosition = ( paperProgramNumber, scratchPad, sharedData ) => {\n    someFunctionWithATypo();\n  };\n\n  // This is tear down code that removes the programs when phyical papers are removed \n  const onProgramRemoved = ( paperProgramNumber, scratchpad, sharedData ) => {\n  };\n\n  const onProgramMarkersAdded = ( programNumber, points, scratchpad, sharedData, markers ) => {\n    phet.paperLand.console.log( markers );\n  };\n\n// Added from lunar lander markers\n  const onProgramMarkersChangedPosition = ( programNumber, programPoints, scratchpad, sharedData, currentMarkers ) => {\n    const firstMarker = currentMarkers[ 0 ];\n    if ( firstMarker ) {\n      const height = 1 - firstMarker.positionOnPaper.y;\n      phet.paperLand.console.log(${height});\n      phet.paperLand.console.log( height, firstMarker.colorName );\n    }\n  };\n\n\n\n  // Add the state change handler defined above as data for this paper.\n  await paper.set('data', {\n    paperPlaygroundData: {\n      updateTime: Date.now(),\n      eventHandlers: {\n        onProgramAdded: onProgramAdded.toString(),\n        onProgramChangedPosition: onProgramChangedPosition.toString(),\n        onProgramRemoved: onProgramRemoved.toString(),\n        onProgramMarkersAdded: onProgramMarkersAdded.toString()\n      }\n    }\n  } );\n\n  //----------------------------------------------------------------------\n  // Projector code\n  //----------------------------------------------------------------------\n\n  // Get a canvas object for this paper.\n  const canvas = await paper.get('canvas');\n\n  // Draw the name of the program on the canvas\n  const ctx = canvas.getContext('2d');\n  ctx.font = '20px sans-serif';\n  ctx.textAlign = 'center';\n  ctx.fillStyle = 'rgb(255,0,0)';\n  ctx.fillText('Physical', canvas.width / 2, canvas.height / 2 - 10);\n  ctx.fillStyle = 'rgb(0,255,0)';\n  ctx.fillText('Marker Tests', canvas.width / 2, canvas.height / 2 + 20);\n})();\n\n\n\n",
  "currentCode": "// Physical marker tests - Copy\n// Keywords: view\n\nimportScripts('paper.js');\n\n(async () => {\n\n  //----------------------------------------------------------------------\n  // Board code\n  //----------------------------------------------------------------------\n\n  // Get the paper number of this piece of paper (which should not change).\n  const myPaperNumber = await paper.get('number');\n\n  // Create view components (graphics, Voicing, sound, anything)\n  const onProgramAdded = ( paperProgramNumber, scratchpad, sharedData ) => {\n    someFunctionWithATypo();\n  };\n\n  const onProgramChangedPosition = ( paperProgramNumber, scratchPad, sharedData ) => {\n    someFunctionWithATypo();\n  };\n\n  // This is tear down code that removes the programs when phyical papers are removed \n  const onProgramRemoved = ( paperProgramNumber, scratchpad, sharedData ) => {\n  };\n\n  const onProgramMarkersAdded = ( programNumber, points, scratchpad, sharedData, markers ) => {\n    phet.paperLand.console.log( markers );\n  };\n\n// Added from lunar lander markers\n  const onProgramMarkersChangedPosition = ( programNumber, programPoints, scratchpad, sharedData, currentMarkers ) => {\n    const firstMarker = currentMarkers[ 0 ];\n    if ( firstMarker ) {\n      const height = 1 - firstMarker.positionOnPaper.y;\n      phet.paperLand.console.log(${height});\n      phet.paperLand.console.log( height, firstMarker.colorName );\n    }\n  };\n\n\n\n  // Add the state change handler defined above as data for this paper.\n  await paper.set('data', {\n    paperPlaygroundData: {\n      updateTime: Date.now(),\n      eventHandlers: {\n        onProgramAdded: onProgramAdded.toString(),\n        onProgramChangedPosition: onProgramChangedPosition.toString(),\n        onProgramRemoved: onProgramRemoved.toString(),\n        onProgramMarkersAdded: onProgramMarkersAdded.toString()\n      }\n    }\n  } );\n\n  //----------------------------------------------------------------------\n  // Projector code\n  //----------------------------------------------------------------------\n\n  // Get a canvas object for this paper.\n  const canvas = await paper.get('canvas');\n\n  // Draw the name of the program on the canvas\n  const ctx = canvas.getContext('2d');\n  ctx.font = '20px sans-serif';\n  ctx.textAlign = 'center';\n  ctx.fillStyle = 'rgb(255,0,0)';\n  ctx.fillText('Physical', canvas.width / 2, canvas.height / 2 - 10);\n  ctx.fillStyle = 'rgb(0,255,0)';\n  ctx.fillText('Marker Tests', canvas.width / 2, canvas.height / 2 + 20);\n})();\n\n\n\n",
  "printed": false,
  "editorInfo": {},
  "currentCodeUrl": "program.ae-tests.122.js",
  "currentCodeHash": "",
  "debugUrl": "/api/spaces/ae-tests/programs/122/debugInfo",
  "claimUrl": "/api/spaces/ae-tests/programs/122/claim",
  "codeHasChanged": false,
  "debugInfo": "{\"logs\":[]}"
}