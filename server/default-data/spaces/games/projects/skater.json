{
  "programs": [
    {
      "number": 1070,
      "title": "Track",
      "keywords": "",
      "description": "",
      "expanded": false,
      "topWhiskerLength": 0.2,
      "rightWhiskerLength": 0.2,
      "bottomWhiskerLength": 0.2,
      "leftWhiskerLength": 0.2,
      "positionProperty": {
        "x": 165.08676909870994,
        "y": 214.51009016538927
      },
      "modelContainer": {
        "namedBooleanProperties": [],
        "namedVector2Properties": [
          {
            "name": "trackP1",
            "propertyType": "Vector2Property",
            "defaultX": 0,
            "defaultY": "0.1"
          },
          {
            "name": "trackP2",
            "propertyType": "Vector2Property",
            "defaultX": "0.15",
            "defaultY": "0.18"
          },
          {
            "name": "trackP3",
            "propertyType": "Vector2Property",
            "defaultX": "0.4",
            "defaultY": "0.75"
          },
          {
            "name": "trackP4",
            "propertyType": "Vector2Property",
            "defaultX": "0.45",
            "defaultY": "0.77"
          },
          {
            "name": "trackP5",
            "propertyType": "Vector2Property",
            "defaultX": "0.55",
            "defaultY": "0.74"
          },
          {
            "name": "trackP6",
            "propertyType": "Vector2Property",
            "defaultX": "0.65",
            "defaultY": "0.68"
          }
        ],
        "namedNumberProperties": [],
        "namedEnumerationProperties": [],
        "namedDerivedProperties": [],
        "namedBounds2Properties": [],
        "namedObservableArrays": [],
        "namedArrayItems": [],
        "namedArrayItemReferences": [],
        "namedStringProperties": []
      },
      "controllerContainer": {
        "vector2PropertyControllers": [],
        "boundsPropertyControllers": [],
        "booleanPropertyControllers": [],
        "numberPropertyControllers": [],
        "enumerationPropertyControllers": []
      },
      "viewContainer": {
        "soundViews": [],
        "speechViews": [],
        "textViews": [],
        "shapeViews": [
          {
            "name": "track1",
            "modelComponentNames": [
              "trackP1",
              "trackP2"
            ],
            "referenceComponentNames": [],
            "controlFunctionString": "setX1( trackP1.x )\r\nsetY1( trackP1.y );\r\n\r\nsetX2( trackP2.x );\r\nsetY2( trackP2.y );",
            "lazyLink": false,
            "defaultViewOptions": {
              "centerX": 0.5,
              "centerY": 0.5,
              "scale": 1,
              "rotation": 0,
              "opacity": 1,
              "visible": true,
              "viewUnits": "model"
            },
            "defaultShapeOptions": {
              "shapeType": "line",
              "fill": "lightblue",
              "stroke": "red",
              "lineWidth": "3",
              "rectWidth": 0.5,
              "rectHeight": 0.5,
              "circleRadius": 0.05,
              "ellipseRadiusX": 0.3,
              "ellipseRadiusY": 0.15,
              "lineStartX": 0,
              "lineStartY": 0,
              "lineEndX": 0.3,
              "lineEndY": 0.3,
              "triangleBaseWidth": 0.1,
              "triangleHeight": 0.3,
              "polygonPoints": [
                [
                  0,
                  0
                ],
                [
                  0.1,
                  0
                ],
                [
                  0.1,
                  0.1
                ],
                [
                  0,
                  0.1
                ]
              ]
            }
          },
          {
            "name": "track2",
            "modelComponentNames": [
              "trackP2",
              "trackP3"
            ],
            "referenceComponentNames": [],
            "controlFunctionString": "setX1( trackP2.x )\r\nsetY1( trackP2.y );\r\n\r\nsetX2( trackP3.x );\r\nsetY2( trackP3.y );",
            "lazyLink": false,
            "defaultViewOptions": {
              "centerX": 0.5,
              "centerY": 0.5,
              "scale": 1,
              "rotation": 0,
              "opacity": 1,
              "visible": true,
              "viewUnits": "model"
            },
            "defaultShapeOptions": {
              "shapeType": "line",
              "fill": "lightblue",
              "stroke": "red",
              "lineWidth": "3",
              "rectWidth": 0.5,
              "rectHeight": 0.5,
              "circleRadius": 0.05,
              "ellipseRadiusX": 0.3,
              "ellipseRadiusY": 0.15,
              "lineStartX": 0,
              "lineStartY": 0,
              "lineEndX": 0.3,
              "lineEndY": 0.3,
              "triangleBaseWidth": 0.1,
              "triangleHeight": 0.3,
              "polygonPoints": [
                [
                  0,
                  0
                ],
                [
                  0.1,
                  0
                ],
                [
                  0.1,
                  0.1
                ],
                [
                  0,
                  0.1
                ]
              ]
            }
          },
          {
            "name": "track3",
            "modelComponentNames": [
              "trackP3",
              "trackP4"
            ],
            "referenceComponentNames": [],
            "controlFunctionString": "\r\nsetX1( trackP3.x )\r\nsetY1( trackP3.y );\r\n\r\nsetX2( trackP4.x );\r\nsetY2( trackP4.y );",
            "lazyLink": false,
            "defaultViewOptions": {
              "centerX": 0.5,
              "centerY": 0.5,
              "scale": 1,
              "rotation": 0,
              "opacity": 1,
              "visible": true,
              "viewUnits": "model"
            },
            "defaultShapeOptions": {
              "shapeType": "line",
              "fill": "lightblue",
              "stroke": "red",
              "lineWidth": "3",
              "rectWidth": 0.5,
              "rectHeight": 0.5,
              "circleRadius": 0.05,
              "ellipseRadiusX": 0.3,
              "ellipseRadiusY": 0.15,
              "lineStartX": 0,
              "lineStartY": 0,
              "lineEndX": 0.3,
              "lineEndY": 0.3,
              "triangleBaseWidth": 0.1,
              "triangleHeight": 0.3,
              "polygonPoints": [
                [
                  0,
                  0
                ],
                [
                  0.1,
                  0
                ],
                [
                  0.1,
                  0.1
                ],
                [
                  0,
                  0.1
                ]
              ]
            }
          },
          {
            "name": "track4",
            "modelComponentNames": [
              "trackP4",
              "trackP5"
            ],
            "referenceComponentNames": [],
            "controlFunctionString": "setX1( trackP4.x )\r\nsetY1( trackP4.y );\r\n\r\nsetX2( trackP5.x );\r\nsetY2( trackP5.y );",
            "lazyLink": false,
            "defaultViewOptions": {
              "centerX": 0.5,
              "centerY": 0.5,
              "scale": 1,
              "rotation": 0,
              "opacity": 1,
              "visible": true,
              "viewUnits": "model"
            },
            "defaultShapeOptions": {
              "shapeType": "line",
              "fill": "lightblue",
              "stroke": "red",
              "lineWidth": "3",
              "rectWidth": 0.5,
              "rectHeight": 0.5,
              "circleRadius": 0.05,
              "ellipseRadiusX": 0.3,
              "ellipseRadiusY": 0.15,
              "lineStartX": 0,
              "lineStartY": 0,
              "lineEndX": 0.3,
              "lineEndY": 0.3,
              "triangleBaseWidth": 0.1,
              "triangleHeight": 0.3,
              "polygonPoints": [
                [
                  0,
                  0
                ],
                [
                  0.1,
                  0
                ],
                [
                  0.1,
                  0.1
                ],
                [
                  0,
                  0.1
                ]
              ]
            }
          },
          {
            "name": "track5",
            "modelComponentNames": [
              "trackP5",
              "trackP6"
            ],
            "referenceComponentNames": [],
            "controlFunctionString": "setX1( trackP5.x )\r\nsetY1( trackP5.y );\r\n\r\nsetX2( trackP6.x );\r\nsetY2( trackP6.y );",
            "lazyLink": false,
            "defaultViewOptions": {
              "centerX": 0.5,
              "centerY": 0.5,
              "scale": 1,
              "rotation": 0,
              "opacity": 1,
              "visible": true,
              "viewUnits": "model"
            },
            "defaultShapeOptions": {
              "shapeType": "line",
              "fill": "lightblue",
              "stroke": "red",
              "lineWidth": "3",
              "rectWidth": 0.5,
              "rectHeight": 0.5,
              "circleRadius": 0.05,
              "ellipseRadiusX": 0.3,
              "ellipseRadiusY": 0.15,
              "lineStartX": 0,
              "lineStartY": 0,
              "lineEndX": 0.3,
              "lineEndY": 0.3,
              "triangleBaseWidth": 0.1,
              "triangleHeight": 0.3,
              "polygonPoints": [
                [
                  0,
                  0
                ],
                [
                  0.1,
                  0
                ],
                [
                  0.1,
                  0.1
                ],
                [
                  0,
                  0.1
                ]
              ]
            }
          }
        ],
        "backgroundViews": [],
        "imageViews": []
      },
      "listenerContainer": {
        "linkListeners": [],
        "animationListeners": [],
        "bluetoothListeners": []
      },
      "customCodeContainer": {
        "onProgramAddedCode": "",
        "onProgramRemovedCode": "",
        "onProgramChangedPositionCode": "",
        "onProgramMarkersAddedCode": "",
        "onProgramMarkersRemovedCode": "",
        "onProgramMarkersChangedPositionCode": "",
        "onProgramAdjacentCode": "",
        "onProgramSeparatedCode": ""
      }
    },
    {
      "number": 982,
      "title": "Height Slider",
      "keywords": "",
      "description": "Move a marker along this paper to control the height of the track.",
      "expanded": false,
      "topWhiskerLength": 0.2,
      "rightWhiskerLength": 0.2,
      "bottomWhiskerLength": 0.2,
      "leftWhiskerLength": 0.2,
      "positionProperty": {
        "x": 166.63724182659118,
        "y": 84.59201450803474
      },
      "modelContainer": {
        "namedBooleanProperties": [],
        "namedVector2Properties": [],
        "namedNumberProperties": [
          {
            "name": "heightSliderValue",
            "propertyType": "NumberProperty",
            "min": "0.3",
            "max": "0.75",
            "defaultValue": "0.3"
          }
        ],
        "namedEnumerationProperties": [],
        "namedDerivedProperties": [],
        "namedBounds2Properties": [],
        "namedObservableArrays": [],
        "namedArrayItems": [],
        "namedArrayItemReferences": [],
        "namedStringProperties": []
      },
      "controllerContainer": {
        "vector2PropertyControllers": [],
        "boundsPropertyControllers": [],
        "booleanPropertyControllers": [],
        "numberPropertyControllers": [
          {
            "name": "markerValueController",
            "controlledComponentName": "heightSliderValue",
            "controlType": "MARKER_LOCATION",
            "controlTypeFamily": "MARKERS",
            "markerColor": "all",
            "relationshipControlType": null
          }
        ],
        "enumerationPropertyControllers": []
      },
      "viewContainer": {
        "soundViews": [],
        "speechViews": [],
        "textViews": [],
        "shapeViews": [],
        "backgroundViews": [],
        "imageViews": []
      },
      "listenerContainer": {
        "linkListeners": [
          {
            "name": "trackHeightLink",
            "controlledPropertyNames": [
              "trackP3",
              "trackP4",
              "trackP5",
              "trackP6"
            ],
            "controlFunctionString": "// The Y position of the bottom points of the track are controlled by the heightSliderValue\r\nsetTrackP3( new phet.dot.Vector2( trackP3.x, heightSliderValue ) );\r\nsetTrackP4( new phet.dot.Vector2( trackP4.x, heightSliderValue + 0.02 ) );\r\nsetTrackP5( new phet.dot.Vector2( trackP5.x, heightSliderValue ) );\r\nsetTrackP6( new phet.dot.Vector2( trackP6.x, heightSliderValue - 0.1 ) );",
            "dependencyNames": [
              "heightSliderValue"
            ],
            "referenceComponentNames": []
          }
        ],
        "animationListeners": [],
        "bluetoothListeners": []
      },
      "customCodeContainer": {
        "onProgramAddedCode": "",
        "onProgramRemovedCode": "",
        "onProgramChangedPositionCode": "",
        "onProgramMarkersAddedCode": "",
        "onProgramMarkersRemovedCode": "",
        "onProgramMarkersChangedPositionCode": "",
        "onProgramAdjacentCode": "",
        "onProgramSeparatedCode": ""
      }
    },
    {
      "number": 1921,
      "title": "Skater",
      "keywords": "",
      "description": "The representation of the \"Skater\". A shape that moves along the track.",
      "expanded": false,
      "topWhiskerLength": 0.2,
      "rightWhiskerLength": 0.2,
      "bottomWhiskerLength": 0.2,
      "leftWhiskerLength": 0.2,
      "positionProperty": {
        "x": 160.63320848036963,
        "y": 385.25659341416724
      },
      "modelContainer": {
        "namedBooleanProperties": [],
        "namedVector2Properties": [
          {
            "name": "skaterPosition",
            "propertyType": "Vector2Property",
            "defaultX": 0,
            "defaultY": "0.1"
          },
          {
            "name": "skaterVelocity",
            "propertyType": "Vector2Property",
            "defaultX": 0,
            "defaultY": 0
          }
        ],
        "namedNumberProperties": [
          {
            "name": "trackPointIndex",
            "propertyType": "NumberProperty",
            "min": 0,
            "max": 10,
            "defaultValue": "0"
          }
        ],
        "namedEnumerationProperties": [],
        "namedDerivedProperties": [],
        "namedBounds2Properties": [],
        "namedObservableArrays": [],
        "namedArrayItems": [],
        "namedArrayItemReferences": [],
        "namedStringProperties": []
      },
      "controllerContainer": {
        "vector2PropertyControllers": [],
        "boundsPropertyControllers": [],
        "booleanPropertyControllers": [],
        "numberPropertyControllers": [],
        "enumerationPropertyControllers": []
      },
      "viewContainer": {
        "soundViews": [],
        "speechViews": [],
        "textViews": [],
        "shapeViews": [
          {
            "name": "skaterView",
            "modelComponentNames": [
              "skaterPosition"
            ],
            "referenceComponentNames": [],
            "controlFunctionString": "setCenterX( skaterPosition.x )\r\nsetCenterY( skaterPosition.y )",
            "lazyLink": false,
            "defaultViewOptions": {
              "centerX": 0.5,
              "centerY": 0.5,
              "scale": 1,
              "rotation": 0,
              "opacity": 1,
              "visible": true,
              "viewUnits": "model"
            },
            "defaultShapeOptions": {
              "shapeType": "triangle",
              "fill": "lightblue",
              "stroke": "red",
              "lineWidth": 1,
              "rectWidth": 0.5,
              "rectHeight": 0.5,
              "circleRadius": 0.05,
              "ellipseRadiusX": 0.3,
              "ellipseRadiusY": 0.15,
              "lineStartX": 0,
              "lineStartY": 0,
              "lineEndX": 0.3,
              "lineEndY": 0.3,
              "triangleBaseWidth": "0.06",
              "triangleHeight": "0.06",
              "polygonPoints": [
                [
                  0,
                  0
                ],
                [
                  0.1,
                  0
                ],
                [
                  0.1,
                  0.1
                ],
                [
                  0,
                  0.1
                ]
              ]
            }
          }
        ],
        "backgroundViews": [],
        "imageViews": []
      },
      "listenerContainer": {
        "linkListeners": [],
        "animationListeners": [
          {
            "name": "skaterAnimation",
            "controlledPropertyNames": [
              "trackP1",
              "trackP2",
              "trackP3",
              "trackP4",
              "trackP5",
              "trackP6",
              "skaterPosition",
              "skaterVelocity",
              "trackPointIndex",
              "gravityValue"
            ],
            "controlFunctionString": "const points = [trackP1, trackP2, trackP3, trackP4, trackP5, trackP6];\r\n\r\n// Function to calculate the distance between two points\r\nfunction distance(point1, point2) {\r\n    return Math.sqrt(Math.pow(point2.x - point1.x, 2) + Math.pow(point2.y - point1.y, 2));\r\n}\r\n\r\n// Function to calculate the slope between two points (deltaY/deltaX)\r\nfunction calculateSlope(point1, point2) {\r\n    return (point2.y - point1.y) / (point2.x - point1.x);\r\n}\r\n\r\nconst nextSkaterPosition = new phet.dot.Vector2( skaterPosition.x, skaterPosition.y );\r\nlet nextSkaterVelocity = new phet.dot.Vector2( skaterVelocity.x, skaterVelocity.y );\r\n\r\nif (trackPointIndex < points.length - 1) {\r\n\r\n    const currentPoint = points[trackPointIndex];\r\n    const nextPoint = points[trackPointIndex + 1];\r\n    const slope = calculateSlope(currentPoint, nextPoint);\r\n\r\n    // Adjust movement acceleration based on the slope\r\n    let acceleration = Math.abs(slope) * gravityValue; // adjust the gravityValue to mimic acceleration\r\n    acceleration = slope > 0 ? acceleration : -acceleration;\r\n    nextSkaterVelocity.y = skaterVelocity.y + acceleration * dt;\r\n    nextSkaterVelocity.x = skaterVelocity.x + acceleration * dt;\r\n\r\n    const movementDeltaX = nextSkaterVelocity.x * dt;\r\n    const movementDeltaY = nextSkaterVelocity.y * dt;\r\n\r\n    // Determine direction of movement\r\n    const movingRight = nextPoint.x > currentPoint.x;\r\n    const movingDown = nextPoint.y > currentPoint.y;\r\n\r\n    // Move skater\r\n    nextSkaterPosition.x += movementDeltaX;\r\n\r\n    if (movingDown) {\r\n        nextSkaterPosition.y += Math.abs(slope) * movementDeltaY;\r\n    } else {\r\n        nextSkaterPosition.y -= Math.abs(slope) * movementDeltaY;\r\n    }\r\n\r\n    // Check if skater has reached the next point\r\n    if ((movingRight && skaterPosition.x >= nextPoint.x) || (!movingRight && skaterPosition.x <= nextPoint.x)) {\r\n        nextSkaterPosition.x = nextPoint.x;\r\n        nextSkaterPosition.y = nextPoint.y;\r\n        setTrackPointIndex( trackPointIndex + 1 ); // Move to the next point\r\n    }\r\n}\r\nelse {\r\n\r\n    // No more track points, make the skater fly off the track\r\n\r\n    // slope between the last two points\r\n    let slope = calculateSlope( points[ points.length -1 ], points[ points.length - 2 ] );\r\n\r\n    const movementDeltaX = skaterVelocity.x * dt;\r\n    const movementDeltaY = skaterVelocity.y * dt;\r\n    nextSkaterPosition.x += movementDeltaX;\r\n    nextSkaterPosition.y -= Math.abs(slope) * movementDeltaY;\r\n\r\n    // it \"feels\" better if the skater falls away much faster when off teh track\r\n    const mimicGravity = gravityValue * 3;\r\n    nextSkaterVelocity.y = nextSkaterVelocity.y - mimicGravity * dt;\r\n}\r\n\r\nsetSkaterPosition( nextSkaterPosition );\r\nsetSkaterVelocity( nextSkaterVelocity );"
          }
        ],
        "bluetoothListeners": []
      },
      "customCodeContainer": {
        "onProgramAddedCode": "",
        "onProgramRemovedCode": "",
        "onProgramChangedPositionCode": "",
        "onProgramMarkersAddedCode": "",
        "onProgramMarkersRemovedCode": "",
        "onProgramMarkersChangedPositionCode": "",
        "onProgramAdjacentCode": "",
        "onProgramSeparatedCode": ""
      }
    },
    {
      "number": 270,
      "title": "Reset Skater",
      "keywords": "speech, description, sound, marker",
      "description": "Add or remove a marker from this paper to reset the skater.",
      "expanded": false,
      "topWhiskerLength": 0.2,
      "rightWhiskerLength": 0.2,
      "bottomWhiskerLength": 0.2,
      "leftWhiskerLength": 0.2,
      "positionProperty": {
        "x": 160.32874210330496,
        "y": 300.48328028113616
      },
      "modelContainer": {
        "namedBooleanProperties": [
          {
            "name": "markerIsOn",
            "defaultValue": false,
            "propertyType": "BooleanProperty"
          }
        ],
        "namedVector2Properties": [],
        "namedNumberProperties": [],
        "namedEnumerationProperties": [],
        "namedDerivedProperties": [],
        "namedBounds2Properties": [],
        "namedObservableArrays": [],
        "namedArrayItems": [],
        "namedArrayItemReferences": [],
        "namedStringProperties": []
      },
      "controllerContainer": {
        "vector2PropertyControllers": [],
        "boundsPropertyControllers": [],
        "booleanPropertyControllers": [
          {
            "name": "markerIsOnController",
            "controlledComponentName": "markerIsOn",
            "controlType": "MARKER",
            "controlTypeFamily": "",
            "whiskerConfiguration": {
              "topLength": 0.2,
              "rightLength": 0.2,
              "bottomLength": 0.2,
              "leftLength": 0.2,
              "otherPaperNumber": null
            },
            "markerColor": ""
          }
        ],
        "numberPropertyControllers": [],
        "enumerationPropertyControllers": []
      },
      "viewContainer": {
        "soundViews": [],
        "speechViews": [],
        "textViews": [],
        "shapeViews": [],
        "backgroundViews": [],
        "imageViews": []
      },
      "listenerContainer": {
        "linkListeners": [
          {
            "name": "resetSkaterLink",
            "controlledPropertyNames": [
              "skaterPosition",
              "skaterVelocity",
              "trackPointIndex"
            ],
            "controlFunctionString": "setSkaterPosition( new phet.dot.Vector2( 0, 0.1 ) );\r\nsetTrackPointIndex( 0 );\r\nsetSkaterVelocity( new phet.dot.Vector2( 0, 0 ) );",
            "dependencyNames": [
              "markerIsOn"
            ],
            "referenceComponentNames": []
          }
        ],
        "animationListeners": [],
        "bluetoothListeners": []
      },
      "customCodeContainer": {
        "onProgramAddedCode": "",
        "onProgramRemovedCode": "",
        "onProgramChangedPositionCode": "",
        "onProgramMarkersAddedCode": "",
        "onProgramMarkersRemovedCode": "",
        "onProgramMarkersChangedPositionCode": "",
        "onProgramAdjacentCode": "",
        "onProgramSeparatedCode": ""
      }
    },
    {
      "number": 1572,
      "title": "Target",
      "keywords": "",
      "description": "Change the track and gravity so that the skater hits this paper!",
      "expanded": false,
      "topWhiskerLength": 0.2,
      "rightWhiskerLength": 0.2,
      "bottomWhiskerLength": 0.2,
      "leftWhiskerLength": 0.2,
      "positionProperty": {
        "x": 162.74437714629417,
        "y": 466.9616818547382
      },
      "modelContainer": {
        "namedBooleanProperties": [],
        "namedVector2Properties": [],
        "namedNumberProperties": [],
        "namedEnumerationProperties": [],
        "namedDerivedProperties": [
          {
            "name": "skaterInTarget",
            "propertyType": "DerivedProperty",
            "dependencyNames": [
              "skaterPosition",
              "targetBounds"
            ],
            "derivation": "return targetBounds.containsPoint( skaterPosition );"
          }
        ],
        "namedBounds2Properties": [
          {
            "name": "targetBounds",
            "propertyType": "Bounds2Property",
            "defaultMinX": 0,
            "defaultMinY": 0,
            "defaultMaxX": 1,
            "defaultMaxY": 1
          }
        ],
        "namedObservableArrays": [],
        "namedArrayItems": [],
        "namedArrayItemReferences": [],
        "namedStringProperties": []
      },
      "controllerContainer": {
        "vector2PropertyControllers": [],
        "boundsPropertyControllers": [
          {
            "name": "targetBoundsController",
            "controlledComponentName": "targetBounds",
            "controlType": "PAPER_SIZE",
            "controlTypeFamily": ""
          }
        ],
        "booleanPropertyControllers": [],
        "numberPropertyControllers": [],
        "enumerationPropertyControllers": []
      },
      "viewContainer": {
        "soundViews": [
          {
            "name": "inTargetSound",
            "modelComponentNames": [
              "skaterInTarget"
            ],
            "referenceComponentNames": [],
            "controlFunctionString": "if ( skaterInTarget ) {\r\n    play();\r\n}",
            "lazyLink": false,
            "soundFileName": "short-success.mp3",
            "loop": false,
            "autoplay": false
          }
        ],
        "speechViews": [],
        "textViews": [],
        "shapeViews": [
          {
            "name": "targetView",
            "modelComponentNames": [
              "targetBounds"
            ],
            "referenceComponentNames": [],
            "controlFunctionString": "matchBounds( targetBounds, true );",
            "lazyLink": false,
            "defaultViewOptions": {
              "centerX": 0.5,
              "centerY": 0.5,
              "scale": 1,
              "rotation": 0,
              "opacity": 1,
              "visible": true,
              "viewUnits": "model"
            },
            "defaultShapeOptions": {
              "shapeType": "rectangle",
              "fill": "green",
              "stroke": "red",
              "lineWidth": 1,
              "rectWidth": 0.5,
              "rectHeight": 0.5,
              "circleRadius": 0.05,
              "ellipseRadiusX": 0.3,
              "ellipseRadiusY": 0.15,
              "lineStartX": 0,
              "lineStartY": 0,
              "lineEndX": 0.3,
              "lineEndY": 0.3,
              "triangleBaseWidth": 0.1,
              "triangleHeight": 0.3,
              "polygonPoints": [
                [
                  0,
                  0
                ],
                [
                  0.1,
                  0
                ],
                [
                  0.1,
                  0.1
                ],
                [
                  0,
                  0.1
                ]
              ]
            }
          }
        ],
        "backgroundViews": [],
        "imageViews": []
      },
      "listenerContainer": {
        "linkListeners": [],
        "animationListeners": [],
        "bluetoothListeners": []
      },
      "customCodeContainer": {
        "onProgramAddedCode": "",
        "onProgramRemovedCode": "",
        "onProgramChangedPositionCode": "",
        "onProgramMarkersAddedCode": "",
        "onProgramMarkersRemovedCode": "",
        "onProgramMarkersChangedPositionCode": "",
        "onProgramAdjacentCode": "",
        "onProgramSeparatedCode": ""
      }
    },
    {
      "number": 197,
      "title": "Gravity Slider",
      "keywords": "",
      "description": "Move a marker along this paper to control the height of the track.",
      "expanded": false,
      "topWhiskerLength": 0.2,
      "rightWhiskerLength": 0.2,
      "bottomWhiskerLength": 0.2,
      "leftWhiskerLength": 0.2,
      "positionProperty": {
        "x": 166.3385223935131,
        "y": 132.13460670412593
      },
      "modelContainer": {
        "namedBooleanProperties": [],
        "namedVector2Properties": [],
        "namedNumberProperties": [
          {
            "name": "gravityValue",
            "propertyType": "NumberProperty",
            "min": "0.00001",
            "max": "0.8",
            "defaultValue": "0.4"
          }
        ],
        "namedEnumerationProperties": [],
        "namedDerivedProperties": [],
        "namedBounds2Properties": [],
        "namedObservableArrays": [],
        "namedArrayItems": [],
        "namedArrayItemReferences": [],
        "namedStringProperties": []
      },
      "controllerContainer": {
        "vector2PropertyControllers": [],
        "boundsPropertyControllers": [],
        "booleanPropertyControllers": [],
        "numberPropertyControllers": [
          {
            "name": "gravityValueController",
            "controlledComponentName": "gravityValue",
            "controlType": "MARKER_LOCATION",
            "controlTypeFamily": "MARKERS",
            "markerColor": "all",
            "relationshipControlType": null
          }
        ],
        "enumerationPropertyControllers": []
      },
      "viewContainer": {
        "soundViews": [],
        "speechViews": [],
        "textViews": [],
        "shapeViews": [],
        "backgroundViews": [],
        "imageViews": []
      },
      "listenerContainer": {
        "linkListeners": [],
        "animationListeners": [],
        "bluetoothListeners": []
      },
      "customCodeContainer": {
        "onProgramAddedCode": "",
        "onProgramRemovedCode": "",
        "onProgramChangedPositionCode": "",
        "onProgramMarkersAddedCode": "",
        "onProgramMarkersRemovedCode": "",
        "onProgramMarkersChangedPositionCode": "",
        "onProgramAdjacentCode": "",
        "onProgramSeparatedCode": ""
      }
    }
  ]
}