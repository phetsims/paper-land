{"programs":[{"number":1563,"title":"Sound A","keywords":"speech, description, sound, marker","description":"","expanded":false,"topWhiskerLength":0.2,"rightWhiskerLength":0.2,"bottomWhiskerLength":0.2,"leftWhiskerLength":0.2,"positionProperty":{"x":479.60625578866325,"y":392.3343979049312},"modelContainer":{"namedBooleanProperties":[{"name":"markerIsOnA","defaultValue":false,"propertyType":"BooleanProperty"},{"name":"simonATrigger","defaultValue":false,"propertyType":"BooleanProperty"}],"namedVector2Properties":[{"name":"aPosition","propertyType":"Vector2Property","defaultX":0,"defaultY":0}],"namedNumberProperties":[],"namedEnumerationProperties":[],"namedDerivedProperties":[],"namedBounds2Properties":[],"namedObservableArrays":[],"namedArrayItems":[],"namedArrayItemReferences":[],"namedStringProperties":[]},"controllerContainer":{"vector2PropertyControllers":[{"name":"aPositionController","controlledComponentName":"aPosition","controlType":"MATCH_CENTER","controlTypeFamily":""}],"boundsPropertyControllers":[],"booleanPropertyControllers":[{"name":"markerIsOnAController","controlledComponentName":"markerIsOnA","controlType":"MARKER","controlTypeFamily":"","whiskerConfiguration":{"topLength":0.2,"rightLength":0.2,"bottomLength":0.2,"leftLength":0.2,"otherPaperNumber":null},"markerColor":""}],"numberPropertyControllers":[],"enumerationPropertyControllers":[]},"viewContainer":{"soundViews":[{"name":"aSound","modelComponentNames":["markerIsOnA","playersTurn"],"referenceComponentNames":[],"controlFunctionString":"if ( playersTurn && markerIsOnA ) {\r\n\r\n    // It is the player's turn and they put a marker on this paper - play the tone.\r\n    stop();\r\n    play();\r\n}","lazyLink":false,"soundFileName":"d-tone.mp3","loop":false,"autoplay":false},{"name":"simonASound","modelComponentNames":["simonATrigger"],"referenceComponentNames":[],"controlFunctionString":"if ( simonATrigger ) {\r\n    stop();\r\n    play();\r\n}","lazyLink":false,"soundFileName":"d-tone.mp3","loop":false,"autoplay":false}],"speechViews":[],"textViews":[],"shapeViews":[{"name":"aView","modelComponentNames":["markerIsOnA","simonATrigger","aPosition","playersTurn"],"referenceComponentNames":[],"controlFunctionString":"if ( ( playersTurn && markerIsOnA ) || simonATrigger ) {\r\n    setFill( 'green' );\r\n    setRadius( 0.15 );\r\n}\r\nelse {\r\n    setFill( 'purple' );\r\n    setRadius( 0.05 );\r\n}\r\n\r\nsetStroke( 'black' );\r\n\r\nsetCenterX( aPosition.x );\r\nsetCenterY( aPosition.y );","lazyLink":false,"defaultViewOptions":{"centerX":0.5,"centerY":0.5,"scale":1,"rotation":0,"opacity":1,"visible":true,"viewUnits":"model"},"defaultShapeOptions":{"shapeType":"circle","fill":"lightblue","stroke":"red","lineWidth":1,"rectWidth":0.5,"rectHeight":0.5,"circleRadius":0.05,"ellipseRadiusX":0.3,"ellipseRadiusY":0.15,"lineStartX":0,"lineStartY":0,"lineEndX":0.3,"lineEndY":0.3,"triangleBaseWidth":0.1,"triangleHeight":0.3,"polygonPoints":[[0,0],[0.1,0],[0.1,0.1],[0,0.1]]}}],"backgroundViews":[],"imageViews":[]},"listenerContainer":{"linkListeners":[],"animationListeners":[],"bluetoothListeners":[]},"customCodeContainer":{"onProgramAddedCode":"","onProgramRemovedCode":"","onProgramChangedPositionCode":"","onProgramMarkersAddedCode":"","onProgramMarkersRemovedCode":"","onProgramMarkersChangedPositionCode":"","onProgramAdjacentCode":"","onProgramSeparatedCode":""}},{"number":1147,"title":"Game Logic","keywords":"","description":"The 'game logic'. Uses an animation component to play the song sequence and receive notes from the player.\n\nThe song sequence is encoded in a string for convenience. Would be nice if the array component could work but it doesn't support this case. It\nwould be better if we had a catch-all component for any kind of JavaScript object for this kind of thing.","expanded":true,"topWhiskerLength":0.2,"rightWhiskerLength":0.2,"bottomWhiskerLength":0.2,"leftWhiskerLength":0.2,"positionProperty":{"x":479.5552716505078,"y":440.6693275175119},"modelContainer":{"namedBooleanProperties":[{"name":"playersTurn","defaultValue":false,"propertyType":"BooleanProperty"},{"name":"playerWon","defaultValue":false,"propertyType":"BooleanProperty"}],"namedVector2Properties":[],"namedNumberProperties":[{"name":"songPlaybackIndex","propertyType":"NumberProperty","min":0,"max":"8","defaultValue":"0"},{"name":"timeSinceComputerNote","propertyType":"NumberProperty","min":0,"max":10,"defaultValue":"0"}],"namedEnumerationProperties":[],"namedDerivedProperties":[],"namedBounds2Properties":[],"namedObservableArrays":[],"namedArrayItems":[],"namedArrayItemReferences":[],"namedStringProperties":[{"name":"gameSequence","propertyType":"StringProperty","defaultValue":"a-b-c-d"},{"name":"playerPlaybackSequence","propertyType":"StringProperty","defaultValue":""}]},"controllerContainer":{"vector2PropertyControllers":[],"boundsPropertyControllers":[],"booleanPropertyControllers":[],"numberPropertyControllers":[],"enumerationPropertyControllers":[]},"viewContainer":{"soundViews":[],"speechViews":[],"textViews":[{"name":"gameStateText","modelComponentNames":["playersTurn","playerWon"],"referenceComponentNames":[],"controlFunctionString":"if ( playerWon ) {\r\n    setString( 'You won!' );\r\n}\r\nelse if ( playersTurn ) {\r\n    setString( 'Your turn!' );\r\n}\r\nelse {\r\n    setString( 'My turn...' );\r\n}\r\n\r\nsetFontSize( 48 );\r\nsetCenterX( 0.5 );\r\nsetCenterY( 0.5 );","lazyLink":false,"defaultViewOptions":{"centerX":0.5,"centerY":0.5,"scale":1,"rotation":0,"opacity":1,"visible":true,"viewUnits":"model"}}],"shapeViews":[],"backgroundViews":[],"imageViews":[]},"listenerContainer":{"linkListeners":[{"name":"playerSequenceController","controlledPropertyNames":["playerPlaybackSequence"],"controlFunctionString":"if ( playersTurn ) {\r\n    let nextNote;\r\n    if ( markerIsOnA ) {\r\n        nextNote = playerPlaybackSequence.length > 0 ? '-a' : 'a';\r\n    }\r\n    else if ( markerIsOnB ) {\r\n        nextNote = playerPlaybackSequence.length > 0 ? '-b' : 'b';\r\n    }\r\n    else if ( markerIsOnC ) {\r\n        nextNote = playerPlaybackSequence.length > 0 ? '-c' : 'c';\r\n    }\r\n    else if ( markerIsOnD ) {\r\n        nextNote = playerPlaybackSequence.length > 0 ? '-d' : 'd';\r\n    }\r\n\r\n    // Add the next note to the player sequence\r\n    if ( nextNote ) {\r\n        setPlayerPlaybackSequence( playerPlaybackSequence + nextNote );\r\n    }\r\n}","dependencyNames":["markerIsOnA","playersTurn","markerIsOnB","markerIsOnC","markerIsOnD"],"referenceComponentNames":[]}],"animationListeners":[{"name":"gameLoop","controlledPropertyNames":["simonATrigger","playersTurn","playerWon","songPlaybackIndex","timeSinceComputerNote","gameSequence","playerPlaybackSequence","simonBTrigger","simonCTrigger","simonDTrigger"],"controlFunctionString":"if ( playersTurn ) {\r\n    const sequenceArray = gameSequence.split( '-' );\r\n    const playerSequenceArray = playerPlaybackSequence.split( '-' );\r\n\r\n    // otherwise, if they are the same, player wins\r\n    if ( playerPlaybackSequence === gameSequence ) {\r\n        setPlayerWon( true );\r\n\r\n        setPlayersTurn( false );\r\n        setPlayerPlaybackSequence( '' );\r\n        setTimeSinceComputerNote( 0 );\r\n\r\n        // create a new game sequence with 8 notes\r\n        const letters = [ 'a', 'b', 'c', 'd' ];\r\n        let newSequence = 'a';\r\n        for ( let i = 0; i < 7; i++ ) {\r\n            const randomLetter = letters[ Math.round( Math.random() * 3 ) ];\r\n            newSequence = `${newSequence}-${randomLetter}`;\r\n        } \r\n        setGameSequence( newSequence );\r\n    }\r\n    else {\r\n\r\n      // if any of the player's sequences are wrong, stop and move to computer turn\r\n      playerSequenceArray.forEach( ( note, index ) => {\r\n          if ( note && sequenceArray[ index ] !== note ) {\r\n            setPlayersTurn( false );\r\n            setPlayerPlaybackSequence( '' );\r\n            setTimeSinceComputerNote( 0 );\r\n          }\r\n      } );\r\n        \r\n    }\r\n}\r\nelse {\r\n\r\n    // Its the computer's turn - play through the song sequence one note at a time\r\n\r\n\r\n    // increment time since the last note\r\n    setTimeSinceComputerNote( timeSinceComputerNote + dt );\r\n\r\n    // if it has been long enough, play the next note\r\n    const interval = 2;\r\n\r\n    if ( timeSinceComputerNote > interval / 2 ) {\r\n\r\n        // reset computer note triggers before playing the next tone\r\n        setSimonATrigger( false );\r\n        setSimonBTrigger( false );\r\n        setSimonCTrigger( false );\r\n        setSimonDTrigger( false );\r\n    }\r\n\r\n    if ( timeSinceComputerNote > interval ) {\r\n\r\n        // if the player won last game, reset this state so that we go back to turn text\r\n        setPlayerWon( false );\r\n\r\n        const gameSequenceArray = gameSequence.split( '-' );\r\n\r\n        const nextNoteToPlay = gameSequenceArray[ songPlaybackIndex ]\r\n\r\n        if ( nextNoteToPlay === 'a' ) {\r\n            setSimonATrigger( true );\r\n        }\r\n        else if ( nextNoteToPlay === 'b' ) {\r\n            setSimonBTrigger( true );\r\n        }\r\n        else if ( nextNoteToPlay === 'c' ) {\r\n            setSimonCTrigger( true );\r\n        }\r\n        else if ( nextNoteToPlay === 'd' ) {\r\n            setSimonDTrigger( true );\r\n        }\r\n\r\n        // reset interval to play the next note after a delay\r\n        setTimeSinceComputerNote( 0 );\r\n\r\n        setSongPlaybackIndex( songPlaybackIndex + 1 );\r\n\r\n        if ( songPlaybackIndex === gameSequenceArray.length ) {\r\n\r\n            // We have played through all the notes, switch to player turn\r\n            setPlayersTurn( true );\r\n            setSongPlaybackIndex( 0 );\r\n        }\r\n    }\r\n\r\n}"}],"bluetoothListeners":[]},"customCodeContainer":{"onProgramAddedCode":"","onProgramRemovedCode":"","onProgramChangedPositionCode":"","onProgramMarkersAddedCode":"","onProgramMarkersRemovedCode":"","onProgramMarkersChangedPositionCode":"","onProgramAdjacentCode":"","onProgramSeparatedCode":""}},{"number":207,"title":"Sound B","keywords":"speech, description, sound, marker","description":"","expanded":false,"topWhiskerLength":0.2,"rightWhiskerLength":0.2,"bottomWhiskerLength":0.2,"leftWhiskerLength":0.2,"positionProperty":{"x":326.1038277196161,"y":440.6665453310194},"modelContainer":{"namedBooleanProperties":[{"name":"markerIsOnB","defaultValue":false,"propertyType":"BooleanProperty"},{"name":"simonBTrigger","defaultValue":false,"propertyType":"BooleanProperty"}],"namedVector2Properties":[{"name":"bPosition","propertyType":"Vector2Property","defaultX":0,"defaultY":0}],"namedNumberProperties":[],"namedEnumerationProperties":[],"namedDerivedProperties":[],"namedBounds2Properties":[],"namedObservableArrays":[],"namedArrayItems":[],"namedArrayItemReferences":[],"namedStringProperties":[]},"controllerContainer":{"vector2PropertyControllers":[{"name":"bPositionController","controlledComponentName":"bPosition","controlType":"MATCH_CENTER","controlTypeFamily":""}],"boundsPropertyControllers":[],"booleanPropertyControllers":[{"name":"markerIsOnBController","controlledComponentName":"markerIsOnB","controlType":"MARKER","controlTypeFamily":"","whiskerConfiguration":{"topLength":0.2,"rightLength":0.2,"bottomLength":0.2,"leftLength":0.2,"otherPaperNumber":null},"markerColor":""}],"numberPropertyControllers":[],"enumerationPropertyControllers":[]},"viewContainer":{"soundViews":[{"name":"bSound","modelComponentNames":["playersTurn","markerIsOnB"],"referenceComponentNames":[],"controlFunctionString":"if ( playersTurn && markerIsOnB ) {\r\n\r\n    // It is the player's turn and they put a marker on this paper - play the tone.\r\n    stop();\r\n    play();\r\n}","lazyLink":false,"soundFileName":"b-tone.mp3","loop":false,"autoplay":false},{"name":"simonBSound","modelComponentNames":["simonBTrigger"],"referenceComponentNames":[],"controlFunctionString":"if ( simonBTrigger ) {\r\n    stop();\r\n    play();\r\n}","lazyLink":false,"soundFileName":"b-tone.mp3","loop":false,"autoplay":false}],"speechViews":[],"textViews":[],"shapeViews":[{"name":"bView","modelComponentNames":["playersTurn","markerIsOnB","simonBTrigger","bPosition"],"referenceComponentNames":[],"controlFunctionString":"if ( ( playersTurn && markerIsOnB ) || simonBTrigger ) {\r\n    setFill( 'blue' );\r\n    setRadius( 0.15 );\r\n}\r\nelse {\r\n    setFill( 'purple' );\r\n    setRadius( 0.05 );\r\n}\r\n\r\nsetStroke( 'black' );\r\n\r\nsetCenterX( bPosition.x );\r\nsetCenterY( bPosition.y );","lazyLink":false,"defaultViewOptions":{"centerX":0.5,"centerY":0.5,"scale":1,"rotation":0,"opacity":1,"visible":true,"viewUnits":"model"},"defaultShapeOptions":{"shapeType":"circle","fill":"lightblue","stroke":"red","lineWidth":1,"rectWidth":0.5,"rectHeight":0.5,"circleRadius":0.05,"ellipseRadiusX":0.3,"ellipseRadiusY":0.15,"lineStartX":0,"lineStartY":0,"lineEndX":0.3,"lineEndY":0.3,"triangleBaseWidth":0.1,"triangleHeight":0.3,"polygonPoints":[[0,0],[0.1,0],[0.1,0.1],[0,0.1]]}}],"backgroundViews":[],"imageViews":[]},"listenerContainer":{"linkListeners":[],"animationListeners":[],"bluetoothListeners":[]},"customCodeContainer":{"onProgramAddedCode":"","onProgramRemovedCode":"","onProgramChangedPositionCode":"","onProgramMarkersAddedCode":"","onProgramMarkersRemovedCode":"","onProgramMarkersChangedPositionCode":"","onProgramAdjacentCode":"","onProgramSeparatedCode":""}},{"number":1499,"title":"Sound C","keywords":"speech, description, sound, marker","description":"","expanded":true,"topWhiskerLength":0.2,"rightWhiskerLength":0.2,"bottomWhiskerLength":0.2,"leftWhiskerLength":0.2,"positionProperty":{"x":485,"y":441.02899317444485},"modelContainer":{"namedBooleanProperties":[{"name":"markerIsOnC","defaultValue":false,"propertyType":"BooleanProperty"},{"name":"simonCTrigger","defaultValue":false,"propertyType":"BooleanProperty"}],"namedVector2Properties":[{"name":"cPosition","propertyType":"Vector2Property","defaultX":0,"defaultY":0}],"namedNumberProperties":[],"namedEnumerationProperties":[],"namedDerivedProperties":[],"namedBounds2Properties":[],"namedObservableArrays":[],"namedArrayItems":[],"namedArrayItemReferences":[],"namedStringProperties":[]},"controllerContainer":{"vector2PropertyControllers":[{"name":"cPositionController","controlledComponentName":"cPosition","controlType":"MATCH_CENTER","controlTypeFamily":""}],"boundsPropertyControllers":[],"booleanPropertyControllers":[{"name":"markerIsOnCController","controlledComponentName":"markerIsOnC","controlType":"MARKER","controlTypeFamily":"","whiskerConfiguration":{"topLength":0.2,"rightLength":0.2,"bottomLength":0.2,"leftLength":0.2,"otherPaperNumber":null},"markerColor":""}],"numberPropertyControllers":[],"enumerationPropertyControllers":[]},"viewContainer":{"soundViews":[{"name":"cSound","modelComponentNames":["playersTurn","markerIsOnC"],"referenceComponentNames":[],"controlFunctionString":"if ( playersTurn && markerIsOnC ) {\r\n\r\n    // It is the player's turn and they put a marker on this paper - play the tone.\r\n    stop();\r\n    play();\r\n}","lazyLink":false,"soundFileName":"g-tone.mp3","loop":false,"autoplay":false},{"name":"simonCSound","modelComponentNames":["simonCTrigger"],"referenceComponentNames":[],"controlFunctionString":"if ( simonCTrigger ) {\r\n    stop();\r\n    play();\r\n}","lazyLink":false,"soundFileName":"g-tone.mp3","loop":false,"autoplay":false}],"speechViews":[],"textViews":[],"shapeViews":[{"name":"cView","modelComponentNames":["playersTurn","markerIsOnC","simonCTrigger","cPosition"],"referenceComponentNames":[],"controlFunctionString":"if ( ( playersTurn && markerIsOnC ) || simonCTrigger ) {\r\n    setFill( 'red' );\r\n    setRadius( 0.15 );\r\n}\r\nelse {\r\n    setFill( 'purple' );\r\n    setRadius( 0.05 );\r\n}\r\n\r\nsetStroke( 'black' );\r\n\r\nsetCenterX( cPosition.x );\r\nsetCenterY( cPosition.y );","lazyLink":false,"defaultViewOptions":{"centerX":0.5,"centerY":0.5,"scale":1,"rotation":0,"opacity":1,"visible":true,"viewUnits":"model"},"defaultShapeOptions":{"shapeType":"circle","fill":"orange","stroke":"red","lineWidth":1,"rectWidth":0.5,"rectHeight":0.5,"circleRadius":0.05,"ellipseRadiusX":0.3,"ellipseRadiusY":0.15,"lineStartX":0,"lineStartY":0,"lineEndX":0.3,"lineEndY":0.3,"triangleBaseWidth":0.1,"triangleHeight":0.3,"polygonPoints":[[0,0],[0.1,0],[0.1,0.1],[0,0.1]]}}],"backgroundViews":[],"imageViews":[]},"listenerContainer":{"linkListeners":[],"animationListeners":[],"bluetoothListeners":[]},"customCodeContainer":{"onProgramAddedCode":"","onProgramRemovedCode":"","onProgramChangedPositionCode":"","onProgramMarkersAddedCode":"","onProgramMarkersRemovedCode":"","onProgramMarkersChangedPositionCode":"","onProgramAdjacentCode":"","onProgramSeparatedCode":""}},{"number":418,"title":"Sound D","keywords":"speech, description, sound, marker","description":"","expanded":false,"topWhiskerLength":0.2,"rightWhiskerLength":0.2,"bottomWhiskerLength":0.2,"leftWhiskerLength":0.2,"positionProperty":{"x":479.71438155510725,"y":758.8144985918086},"modelContainer":{"namedBooleanProperties":[{"name":"markerIsOnD","defaultValue":false,"propertyType":"BooleanProperty"},{"name":"simonDTrigger","defaultValue":false,"propertyType":"BooleanProperty"}],"namedVector2Properties":[{"name":"dPosition","propertyType":"Vector2Property","defaultX":0,"defaultY":0}],"namedNumberProperties":[],"namedEnumerationProperties":[],"namedDerivedProperties":[],"namedBounds2Properties":[],"namedObservableArrays":[],"namedArrayItems":[],"namedArrayItemReferences":[],"namedStringProperties":[]},"controllerContainer":{"vector2PropertyControllers":[{"name":"dPositionController","controlledComponentName":"dPosition","controlType":"MATCH_CENTER","controlTypeFamily":""}],"boundsPropertyControllers":[],"booleanPropertyControllers":[{"name":"markerIsOnDController","controlledComponentName":"markerIsOnD","controlType":"MARKER","controlTypeFamily":"","whiskerConfiguration":{"topLength":0.2,"rightLength":0.2,"bottomLength":0.2,"leftLength":0.2,"otherPaperNumber":null},"markerColor":""}],"numberPropertyControllers":[],"enumerationPropertyControllers":[]},"viewContainer":{"soundViews":[{"name":"dSound","modelComponentNames":["playersTurn","markerIsOnD"],"referenceComponentNames":[],"controlFunctionString":"if ( playersTurn && markerIsOnD ) {\r\n\r\n    // It is the player's turn and they put a marker on this paper - play the tone.\r\n    stop();\r\n    play();\r\n}","lazyLink":false,"soundFileName":"c-tone.mp3","loop":false,"autoplay":false},{"name":"simonDSound","modelComponentNames":["simonDTrigger"],"referenceComponentNames":[],"controlFunctionString":"if ( simonDTrigger ) {\r\n    stop();\r\n    play();\r\n}","lazyLink":false,"soundFileName":"c-tone.mp3","loop":false,"autoplay":false}],"speechViews":[],"textViews":[],"shapeViews":[{"name":"dView","modelComponentNames":["playersTurn","markerIsOnD","simonDTrigger","dPosition"],"referenceComponentNames":[],"controlFunctionString":"if ( ( playersTurn && markerIsOnD ) || simonDTrigger ) {\r\n    setFill( 'yellow' );\r\n    setRadius( 0.15 );\r\n}\r\nelse {\r\n    setFill( 'purple' );\r\n    setRadius( 0.05 );\r\n}\r\n\r\nsetStroke( 'black' );\r\n\r\nsetCenterX( dPosition.x );\r\nsetCenterY( dPosition.y );","lazyLink":false,"defaultViewOptions":{"centerX":0.5,"centerY":0.5,"scale":1,"rotation":0,"opacity":1,"visible":true,"viewUnits":"model"},"defaultShapeOptions":{"shapeType":"circle","fill":"orange","stroke":"red","lineWidth":1,"rectWidth":0.5,"rectHeight":0.5,"circleRadius":0.05,"ellipseRadiusX":0.3,"ellipseRadiusY":0.15,"lineStartX":0,"lineStartY":0,"lineEndX":0.3,"lineEndY":0.3,"triangleBaseWidth":0.1,"triangleHeight":0.3,"polygonPoints":[[0,0],[0.1,0],[0.1,0.1],[0,0.1]]}}],"backgroundViews":[],"imageViews":[]},"listenerContainer":{"linkListeners":[],"animationListeners":[],"bluetoothListeners":[]},"customCodeContainer":{"onProgramAddedCode":"","onProgramRemovedCode":"","onProgramChangedPositionCode":"","onProgramMarkersAddedCode":"","onProgramMarkersRemovedCode":"","onProgramMarkersChangedPositionCode":"","onProgramAdjacentCode":"","onProgramSeparatedCode":""}}]}